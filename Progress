using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Fitness_Tracker_Application
{
    public partial class Progress : Form
    {
        public Progress()
        {
            InitializeComponent();
            ProID();
        
        }
        FitnessTrackerDatabaseTableAdapters.MembertoGoalTableAdapter objMm = new FitnessTrackerDatabaseTableAdapters.MembertoGoalTableAdapter();
        FitnessTrackerDatabaseTableAdapters.GoalInfoTableAdapter objGoal = new FitnessTrackerDatabaseTableAdapters.GoalInfoTableAdapter();
        FitnessTrackerDatabaseTableAdapters.ActivityTableAdapter objAct = new FitnessTrackerDatabaseTableAdapters.ActivityTableAdapter();
        DataTable dtdisplay = new DataTable();
        DataRow dr;
        FitnessTrackerDatabaseTableAdapters .ProgressTableAdapter objPro = new FitnessTrackerDatabaseTableAdapters.ProgressTableAdapter ();
        FitnessTrackerDatabaseTableAdapters.ProgressAddInfoTableAdapter objProAddinfo = new FitnessTrackerDatabaseTableAdapters.ProgressAddInfoTableAdapter();


        string TotalCal ;
        int remove;
        public static string ProgressID;
        int ProData;
        

        public void ProID()
        {

            DataTable dtpro = new DataTable();
            dtpro = objPro.GetData();

            if (dtpro.Rows.Count == 0)
            {
                ProgressID  = "U_001";
            }
            else
            {

                int size = dtpro.Rows.Count - 1;
                // get the last ID from Progress Table
                string oldid = dtpro.Rows[size][0].ToString();
                int newid = Convert.ToInt32(oldid.Substring(2, 3));

                if (newid >= 1 && newid < 9)
                {
                    ProgressID = "U_00" + (newid + 1);
                }
                else if (newid >= 9 && newid < 99)
                {
                    ProgressID = "U_0" + (newid + 1);
                }
                else if (newid >= 99 && newid < 999)
                {
                    ProgressID = "U_" + (newid + 1);
                }

            }

        }
        
        private void DisplayCreation()
        {
            dr = dtdisplay.NewRow();
            dtdisplay.Columns.Add("Activity Name").ToString ();
            dtdisplay.Columns.Add("Duration").ToString();
            dtdisplay.Columns.Add("Weight").ToString();
            dtdisplay.Columns.Add("MET").ToString();
            dtdisplay.Columns.Add("Burned Calories").ToString();
            dgvDataDisplay.DataSource = dtdisplay;
            dgvDataDisplay.Refresh();
        
        }
        private void label3_Click(object sender, EventArgs e)
        {

        }

        private void Progress_Load(object sender, EventArgs e)
        {

            ProID();
            btnRemove.Enabled = false;
            DisplayCreation();


            // Get Data From MembertoGoal
            DataTable dt = new DataTable();
            string MID = MemberLogin.MemberID;
            dt = objMm.CheckData(MID);

            if (dt.Rows.Count > 0) 
            {
                txtMbName.Text = MemberLogin.MemberName;
                txtWeight.Text = dt.Rows[0][1].ToString();
                txtDuration.Text = dt.Rows[0][2].ToString ();
                txtTgWeight.Text = dt.Rows[0][3].ToString ();
                txtSDate .Text =dt .Rows [0][4].ToString ();
            
            }


            // From Act Data
            DataTable dtAct = new DataTable();
            dtAct = objAct.GetData();
            if(dtAct .Rows .Count > 0)
            {

                for (int j = 0; j < dtAct.Rows.Count; j++ )
                {
                    cboActivity.Items.Add(dtAct .Rows [j][1].ToString());
                }
            
            
            }


        }

        private void textBox3_TextChanged(object sender, EventArgs e)
        {

        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            if (dgvDataDisplay.Rows.Count < 0)
            {
                MessageBox.Show("There is no activity!");
            }
            else
            {
                string totalCal;
                DateTime DateofPro;
                int totalAct;
                DateofPro = Convert.ToDateTime(txtSDate.Text);
                totalAct = Convert.ToInt32(txtTotalAct.Text);
                totalCal = (txtTotalCal.Text);

                // Insert and store data 
                 ProData = objPro.dataInserttoPro(ProgressID, MemberLogin.MemberID, DateofPro.ToString(), totalCal, totalAct);

                FitnessTrackerDatabaseTableAdapters.ProgressTableAdapter objpro = new FitnessTrackerDatabaseTableAdapters.ProgressTableAdapter();


                if (ProData > 0)
                {

                    decimal ttcal = Convert.ToDecimal(txtTotalCal.Text);

                    decimal tgweight = Convert.ToDecimal(txtTgWeight.Text);

                       // compare target calories and total calories that was burned
                         // claories would be released and I'd like to change it in kg to show ( 1kg =7700 calories )
                    if (ttcal >= tgweight)
                    {

                        MessageBox.Show("Congradulations! You have achieved your goal!");

                        HomePage HP = new HomePage();
                        HP.Show();
                        this.Hide();

                    }
                    
                      else
                    {
                        MessageBox.Show("Sorry you aren't still reach your goal! Take more time and pracice!");

                        HomePage HP = new HomePage();
                        HP.Show();
                        this.Hide();
                    }
                     
    
                }


            }
        }

        private void cboActivity_SelectedIndexChanged(object sender, EventArgs e)
        {

            DataTable dtAct = new DataTable();
            string Activity;
            Activity = cboActivity.SelectedItem.ToString();
            dtAct = objAct.CheckActName(Activity);
            if(dtAct .Rows .Count > 0)
            {
                txtMET .Text =dtAct .Rows [0]["MET"].ToString ();
            }


        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            try
            {
                if (txtDuration.Text == "")
                {
                    MessageBox.Show("You still need to fill your Duration!");
                    txtDuration.Focus();
                }
                else
                {
                    if (cboActivity.SelectedIndex == -1)
                    {
                        MessageBox.Show("You need to choose one Activity!");
                        cboActivity.Focus();
                    }
                    else
                    {
                        string MET, ActName;
                        int Duration, TotalActvities = 0;
                        decimal BurCal, weight;

                        ActName = cboActivity.SelectedItem.ToString();
                        Duration = Convert.ToInt32(txtDuration.Text);
                        weight = Convert.ToDecimal(txtWeight.Text);
                        MET = txtMET.Text;

                        // Add fornula to calculate Burned calories
                        BurCal = Convert.ToDecimal(Convert.ToDecimal(txtMET.Text) * weight * Duration) / 36;
                        dr = dtdisplay.NewRow();

                        // to check the same act in a day 
                        int type = -1;
                        for (int k = 0; k < dgvDataDisplay.Rows.Count; k++)
                        {
                            if (Convert.ToString(dgvDataDisplay.Rows[k].Cells["Activity Name"].Value) == cboActivity.Text)
                            {
                                MessageBox.Show("Repeatitive Type of Activity!");
                                type = k;
                                break;
                            }

                        }
                        if (type == -1)
                        {

                            dr[0] = ActName;
                            dr[1] = Duration;
                            dr[2] = weight;
                            dr[3] = MET;
                            dr[4] = BurCal;

                            dtdisplay.Rows.Add(dr);
                            dgvDataDisplay.DataSource = dtdisplay;
                            dgvDataDisplay.Refresh();

                            for (int t = 0; t < dgvDataDisplay.Rows.Count - 1; t++)
                            {
                                TotalCal += Convert.ToDecimal(dgvDataDisplay.Rows[t].Cells[4].Value);
                                TotalActvities += 1;
                            }

                            txtTotalCal.Text = Convert.ToString(TotalCal);
                            txtTotalAct.Text = Convert.ToString(TotalActvities);

                        }

                    }
                }
            }
            catch (Exception)
            {
                MessageBox.Show("Unsuccessful");
            }

        }

        private void btnRemove_Click(object sender, EventArgs e)
        {
            int u = dgvDataDisplay.CurrentRow.Index;
            decimal existdata = Convert.ToDecimal(dgvDataDisplay ["Burned calories" , u].Value .ToString ());
            // to store data in temporary ( in form)
            decimal temdata = Convert.ToDecimal(txtTotalCal .Text );

            txtTotalCal.Text = Convert.ToString  (temdata - existdata );
            txtTotalAct.Text = Convert.ToString (Convert.ToDecimal(txtTotalAct.Text) - 1);

            //to clear data on data grid view
            this.dgvDataDisplay.Rows.RemoveAt(remove ); 

        }

        private void dgvDataDisplay_CellMouseClick(object sender, DataGridViewCellMouseEventArgs e)
        {
            btnRemove.Enabled = true;
            remove = dgvDataDisplay.CurrentRow.Index;
        }
       



    }
}
